<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title><%= title %></title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <!-- Bootstrap 3.3.6 -->
    <link rel="stylesheet" href="bootstrap/css/bootstrap.min.css">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.5.0/css/font-awesome.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css">
    <!-- DataTables -->
    <link rel="stylesheet" href="plugins/datatables/dataTables.bootstrap.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="dist/css/AdminLTE.min.css">
    <!-- AdminLTE Skins. Choose a skin from the css/skins
         folder instead of downloading all of them to reduce the load. -->
    <link rel="stylesheet" href="dist/css/skins/_all-skins.min.css">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>
<body class="hold-transition skin-blue sidebar-mini">
<div class="wrapper">

    <% include nav.ejs %>

    <% include sidenav.ejs %>

    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper">
        <!-- Content Header (Page header) -->
        <section class="content-header">
            <h1>
                직원 근무 현황
                <small>직원 근무 현황 차트</small>
            </h1>
            <ol class="breadcrumb">
                <li><a href="dashboard"><i class="fa fa-dashboard"></i> Dashboard</a></li>
                <li><a href="#">근무 기록 조회</a></li>
                <li class="active">직원 근무 현황</li>
            </ol>
        </section>

        <!-- Main content -->
        <!-- Main content -->
        <section class="content">
            <div class="row">
                <div class="col-sm-6">
                    <div class="box">
                        <div class="box-header">
                            <h3 class="box-title">reserved</h3>
                            <div class="box-tools pull-right">
                                <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                            </div>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">

                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->
                </div>
                <!-- /.col -->
                <div class="col-sm-7 col-md-7 col-xs-7">
                    <div class="box">
                        <div class="box-header">
                            <h3 class="box-title">출퇴근시간</h3>
                            <div class="box-tools pull-right">
                                <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                            </div>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div id="chartContainer">
                                <script src="http://dimplejs.org/lib/d3.v3.4.8.js"></script>
                                <script src="http://dimplejs.org/dist/dimple.v2.2.0.min.js"></script>
                                <script type="text/javascript">
                                    var svg = dimple.newSvg("#chartContainer", 590, 600);

                                    // The default data set for these examples has regular times
                                    // and the point of this demo is to show the time axis
                                    // functionality, therefore a small bespoke data set is used.
                                    data = [
                                        { "Shift":"Start","Date":"1 Aug 2016 08:30","Value":1000 },
                                        { "Shift":"Start","Date":"2 Aug 2016 08:20","Value":1000 },
                                        { "Shift":"Start","Date":"3 Aug 2016 09:00","Value":1000 },
                                        { "Shift":"Start","Date":"4 Aug 2016 08:00","Value":1000 },
                                        { "Shift":"Start","Date":"5 Aug 2016 09:10","Value":1000 },
                                        { "Shift":"Start","Date":"6 Aug 2016 08:30","Value":1000 },
                                        { "Shift":"Start","Date":"7 Aug 2016 08:30","Value":1000 },
                                        // { "Shift":"Start","Date":"8 Aug 2016 12:00","Value":1000 },
                                        // { "Shift":"Start","Date":"9 Aug 2016 10:10","Value":1000 },
                                        // { "Shift":"Start","Date":"10 Aug 2016 11:40","Value":1000},

                                        // { "Shift":"Start","Date":"1 Dec Aug20Oct10 10:30","Value":1000 },
                                        // { "Shift":"Start","Date":"5 Dec 2010 09:30","Value":1000 },
                                        // { "Shift":"Start","Date":"13 Dec 2010 10:50","Value":1000 },
                                        // { "Shift":"Start","Date":"25 Dec 2010 10:10","Value":1000 },
                                        // { "Shift":"Start","Date":"30 Dec 2010 10:50","Value":1000 },

                                        // { "Shift":"Early","Date":"9 Dec 2010 12:20","Value":1700 },
                                        // { "Shift":"Early","Date":"15 Dec 2010 10:10","Value":1400 },
                                        // { "Shift":"Early","Date":"20 Dec 2010 10:00","Value":1200 },

                                        { "Shift":"End","Date":"1 Aug 2016 17:30","Value":1000 },
                                        { "Shift":"End","Date":"2 Aug 2016 19:30","Value":1000 },
                                        { "Shift":"End","Date":"3 Aug 2016 20:40","Value":1000 },
                                        { "Shift":"End","Date":"4 Aug 2016 18:10","Value":1000 },
                                        { "Shift":"End","Date":"5 Aug 2016 18:00","Value":1000 },
                                        { "Shift":"End","Date":"6 Aug 2016 19:50","Value":1000 },
                                        { "Shift":"End","Date":"7 Aug 2016 20:10","Value":1000 },
                                        // { "Shift":"End","Date":"8 Aug 2016 20:00","Value":1000 },
                                        // { "Shift":"End","Date":"9 Aug 2016 21:50","Value":1000 },
                                        // { "Shift":"End","Date":"10 Aug 2016 18:10","Value":1000 },

                                        // { "Shift":"End","Date":"1 Dec 2010 19:50","Value":1000 },
                                        // { "Shift":"End","Date":"5 Dec 2010 18:20","Value":1000 },
                                        // { "Shift":"End","Date":"13 Dec 2010 19:10","Value":1000 },
                                        // { "Shift":"End","Date":"25 Dec 2010 19:00","Value":1000 },
                                        // { "Shift":"End","Date":"30 Dec 2010 19:00","Value":1000 }
                                    ];

                                    // Create Separate Date and Time, this allows us to draw them
                                    // on separate axes. Despite the time axis only displaying
                                    // the time portion, the whole date is used so they need to
                                    // have the same date allocated
                                    data.forEach(function (d) {
                                        d["Day"] = d["Date"].substring(0, d["Date"].length - 6);

                                        d["Time of Day"] =
                                                "2000-01-01 " + d["Date"].substring(d["Date"].length - 5);
                                    }, this);
                                    // Create the chart as usual
                                    var myChart = new dimple.chart(svg, data);
                                    myChart.setBounds(70, 40, 490, 320)

                                    // Add the x axis reading dates in the format 01 Jan 2012
                                    // and displaying them 01 Jan
                                    var x = myChart.addTimeAxis("x", "Day", "%d %b %Y", "%m/%d(%a)");

                                    // Add the y axis reading dates and times but only outputting
                                    // times.
                                    var y = myChart.addTimeAxis("y", "Time of Day",
                                            "%Y-%m-%d %H:%M", "%H:%M");

                                    // Size the bubbles by volume
                                    var z = myChart.addMeasureAxis("z", "Value");

                                    // Setting min and max dates requires them to be set
                                    // as actual javascript date objects
                                    x.overrideMin = new Date("2016-07-31");
                                    x.overrideMax = new Date("2016-08-07");
                                    y.overrideMin = new Date("01/01/2000 7:00 am");
                                    y.overrideMax = new Date("01/01/2000 11:00 pm");

                                    // Show a label for every 4 weeks.
                                    x.timePeriod = d3.time.days;
                                    x.timeInterval = 1;

                                    // Control bubble sizes by setting the max and min values
                                    z.overrideMin = 900;
                                    z.overrideMax = 3000;

                                    // Add the bubble series for shift values first so that it is
                                    // drawn behind the lines
                                    myChart.addSeries("Shift", dimple.plot.bubble);

                                    // Add the line series on top of the bubbles. The bubbles
                                    // and line points will naturally fall in the same places
                                    var s = myChart.addSeries("Shift", dimple.plot.line);

                                    // Add line markers to the line because it looks nice
                                    s.lineMarkers = true;

                                    // Show a legend
                                    myChart.addLegend(180, 10, 360, 20, "right");

                                    // Draw everything
                                    myChart.draw();

                                </script>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->
                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
            <!-- /.row -->
        </section>
        <!-- /.content -->


    </div>
    <!-- /.content-wrapper -->

    <% include footer.ejs %>

</div>
<!-- ./wrapper -->
<!-- REQUIRED JS SCRIPTS -->
<!-- jQuery 2.2.3 -->
<script src="plugins/jQuery/jquery-2.2.3.min.js"></script>
<!-- AdminLTE App -->
<script src="dist/js/app.min.js"></script>
<!-- Bootstrap 3.3.6 -->
<script src="bootstrap/js/bootstrap.min.js"></script>
<script>

    $(document).ready(function(){

    });

</script>
</body>
</html>
